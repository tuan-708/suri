import 'package:suri_checking_event_app/features/event/domain/entities/ticket_info_entity.dart';

class TicketInfoModel extends TicketInfoEntity {
  const TicketInfoModel({
    required String eventName,
    required String accountName,
    required String eventAccountTypeName,
    String? accountPhone,
    required String eventPhoto,
    required String eventBanner,
    required String eventBannerBase64,
    String? addressEvent,
    required int rankId,
    required DateTime startDate,
    required DateTime endDate,
    required String eventInfo,
    bool? isCheckin,
    bool? isCheckedGift,
    DateTime? timeCheckin,
    required int id,
    required int active,
    required String name,
    required String info,
    required String description,
    required int eventId,
    required int accountId,
    required int eventAccountTypeId,
    int? typeAccount,
    String? address,
    required String phone,
    String? photo,
    required DateTime createdTime,
    required String gmail,
    String? note,
    String? relationship,
    dynamic account,
    dynamic event,
    dynamic eventAccountType,
    required List<dynamic> eventAccountCheckins,
  }) : super(
          eventName: eventName,
          accountName: accountName,
          eventAccountTypeName: eventAccountTypeName,
          accountPhone: accountPhone,
          eventPhoto: eventPhoto,
          eventBanner: eventBanner,
          eventBannerBase64: eventBannerBase64,
          addressEvent: addressEvent,
          rankId: rankId,
          startDate: startDate,
          endDate: endDate,
          eventInfo: eventInfo,
          isCheckin: isCheckin,
          isCheckedGift: isCheckedGift,
          timeCheckin: timeCheckin,
          id: id,
          active: active,
          name: name,
          info: info,
          description: description,
          eventId: eventId,
          accountId: accountId,
          eventAccountTypeId: eventAccountTypeId,
          typeAccount: typeAccount,
          address: address,
          phone: phone,
          photo: photo,
          createdTime: createdTime,
          gmail: gmail,
          note: note,
          relationship: relationship,
          account: account,
          event: event,
          eventAccountType: eventAccountType,
          eventAccountCheckins: eventAccountCheckins,
        );

  factory TicketInfoModel.fromJson(Map<String, dynamic> json) {
    return TicketInfoModel(
      eventName: json['eventName'] ?? '',
      accountName: json['accountName'] ?? '',
      eventAccountTypeName: json['eventAccountTypeName'] ?? '',
      accountPhone: json['accountPhone'] ?? '',
      eventPhoto: json['eventPhoto'] ?? '',
      eventBanner: json['eventBanner'] ?? '',
      eventBannerBase64: json['eventBannerBase64'] ?? '',
      addressEvent: json['addressEvent'] ?? '',
      rankId: json['rankId'] ?? 0,
      startDate: json['startDate'] != null
          ? DateTime.parse(json['startDate'])
          : DateTime.now(),
      endDate: json['endDate'] != null
          ? DateTime.parse(json['endDate'])
          : DateTime.now(),
      eventInfo: json['eventInfo'] ?? '',
      isCheckin: json['isCheckin'] ?? false,
      isCheckedGift: json['isCheckedGift'],
      timeCheckin: json['timeCheckin'] != null
          ? DateTime.parse(json['timeCheckin'])
          : null,
      id: json['id'] ?? 0,
      active: json['active'] ?? 0,
      name: json['name'] ?? '',
      info: json['info'] ?? '',
      description: json['description'] ?? '',
      eventId: json['eventId'] ?? 0,
      accountId: json['accountId'] ?? 0,
      eventAccountTypeId: json['eventAccountTypeId'] ?? 0,
      typeAccount: json['typeAccount'] ?? 0,
      address: json['address'] ?? '',
      phone: json['phone'] ?? '',
      photo: json['photo'] ?? '',
      createdTime: DateTime.parse(json['createdTime']),
      gmail: json['gmail'] ?? '',
      note: json['note'] ?? '',
      relationship: json['relationship'] ?? "",
      account: json['account'],
      event: json['event'] ?? '',
      eventAccountType: json['eventAccountType'],
      eventAccountCheckins:
          List<dynamic>.from(json['eventAccountCheckins'] ?? []),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'eventName': eventName,
      'accountName': accountName,
      'eventAccountTypeName': eventAccountTypeName,
      'accountPhone': accountPhone,
      'eventPhoto': eventPhoto,
      'eventBanner': eventBanner,
      'eventBannerBase64': eventBannerBase64,
      'addressEvent': addressEvent,
      'rankId': rankId,
      'startDate': startDate.toIso8601String(),
      'endDate': endDate.toIso8601String(),
      'eventInfo': eventInfo,
      'isCheckin': isCheckin,
      'isCheckedGift': isCheckedGift,
      'timeCheckin': timeCheckin?.toIso8601String(),
      'id': id,
      'active': active,
      'name': name,
      'info': info,
      'description': description,
      'eventId': eventId,
      'accountId': accountId,
      'eventAccountTypeId': eventAccountTypeId,
      'typeAccount': typeAccount,
      'address': address,
      'phone': phone,
      'photo': photo,
      'createdTime': createdTime.toIso8601String(),
      'gmail': gmail,
      'note': note,
      'relationship': relationship,
      'account': account,
      'event': event,
      'eventAccountType': eventAccountType,
      'eventAccountCheckins': eventAccountCheckins,
    };
  }
}
