import 'dart:convert';

import 'package:suri_checking_event_app/features/event/domain/entities/event_detail_entity.dart';

class EventDetailModel extends EventDetailEntity {
  const EventDetailModel({
    required String eventStatusName,
    required String eventTypeName,
    required bool isSender,
    required bool isSpecialEvent,
    required List<String> imageString,
    required List<String> images,
    required List<String> imageList,
    required int id,
    required int active,
    required String name,
    required String info,
    required String description,
    required String photo,
    required String bannerPhoto,
    required DateTime startDate,
    required DateTime endDate,
    required int eventStatusId,
    required int eventTypeId,
    required DateTime createdTime,
    dynamic eventStatus,
    dynamic eventType,
    required List<dynamic> eventAccounts,
    required List<dynamic> eventGifts,
    required List<dynamic> sponsorEvents,
  }) : super(
          eventStatusName: eventStatusName,
          eventTypeName: eventTypeName,
          isSender: isSender,
          isSpecialEvent: isSpecialEvent,
          imageString: imageString,
          images: images,
          imageList: imageList,
          id: id,
          active: active,
          name: name,
          info: info,
          description: description,
          photo: photo,
          bannerPhoto: bannerPhoto,
          startDate: startDate,
          endDate: endDate,
          eventStatusId: eventStatusId,
          eventTypeId: eventTypeId,
          createdTime: createdTime,
          eventStatus: eventStatus,
          eventType: eventType,
          eventAccounts: eventAccounts,
          eventGifts: eventGifts,
          sponsorEvents: sponsorEvents,
        );

  factory EventDetailModel.fromJson(Map<String, dynamic> json) {
    return EventDetailModel(
      eventStatusName: json['eventStatusName'] ?? '',
      eventTypeName: json['eventTypeName'] ?? '',
      isSender: json['isSender'] ?? false,
      isSpecialEvent: json['isSpecialEvent'] ?? false,
      imageString: json['imageString'] == null
          ? []
          : List<String>.from(jsonDecode(json['imageString'])),
      images: json['images'] == null ? [] : [],
      imageList: List<String>.from(json['imageList'] ?? []),
      id: json['id'] ?? 0,
      active: json['active'] ?? 0,
      name: json['name'] ?? '',
      info: json['info'] ?? '',
      description: json['description'] ?? '',
      photo: json['photo'] ?? '',
      bannerPhoto: json['bannerPhoto'] ?? '',
      startDate: DateTime.parse(json['startDate'] ?? ''),
      endDate: DateTime.parse(json['endDate'] ?? ''),
      eventStatusId: json['eventStatusId'] ?? 0,
      eventTypeId: json['eventTypeId'] ?? 0,
      createdTime: DateTime.parse(json['createdTime']),
      eventStatus: json['eventStatus'],
      eventType: json['eventType'],
      eventAccounts: List<dynamic>.from(json['eventAccounts'] ?? []),
      eventGifts: List<dynamic>.from(json['eventGifts'] ?? []),
      sponsorEvents: List<dynamic>.from(json['sponsorEvents'] ?? []),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'eventStatusName': eventStatusName,
      'eventTypeName': eventTypeName,
      'isSender': isSender,
      'isSpecialEvent': isSpecialEvent,
      'imageString': imageString,
      'images': images,
      'imageList': imageList,
      'id': id,
      'active': active,
      'name': name,
      'info': info,
      'description': description,
      'photo': photo,
      'bannerPhoto': bannerPhoto,
      'startDate': startDate.toIso8601String(),
      'endDate': endDate.toIso8601String(),
      'eventStatusId': eventStatusId,
      'eventTypeId': eventTypeId,
      'createdTime': createdTime.toIso8601String(),
      'eventStatus': eventStatus,
      'eventType': eventType,
      'eventAccounts': eventAccounts,
      'eventGifts': eventGifts,
      'sponsorEvents': sponsorEvents,
    };
  }
}
